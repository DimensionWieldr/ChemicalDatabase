package gui;

import databaserunner.*;
import java.util.*;
import javax.swing.*;

public class ListBinaryCompounds extends javax.swing.JFrame {

    //our fields
    private List<BinaryCompound> compounds;
    private String[] names;
    
    private DatabaseGUI databaseGUI;
    
    /**
     * Creates new form ListBinaryCompounds
     */
    public ListBinaryCompounds(DatabaseGUI databaseGUI) {
        this.databaseGUI = databaseGUI;
        names = new String[DatabaseGUI.EMPTY_ARRAY_SIZE];
        this.initComponents();
    }
    
    //our methods
    public void start(ListBinaryCompounds listBinaryCompounds) {
        this.createList();
        this.initConstants();
        
        jListBinaryCompounds.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = names;
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                listBinaryCompounds.setVisible(true);
            }
        });
        
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.removeWindowListener(this.databaseGUI.WINDOW_CLOSE);
        
        if (DatabaseGUI.getMadeChanges()) {
            this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
            this.addWindowListener(this.databaseGUI.WINDOW_CLOSE);
        }
    }
    
    private void initConstants() {
        this.jTextFieldSearch.setText(DatabaseGUI.TEXT_FIELD_ENTER_NAME);
        
        this.jLabelCommonName.setText(Chemical.LABEL_NAME + DatabaseGUI.ASSIGNMENT_PUNCTUATION);
        this.jLabelCommonNameExtra.setText(DatabaseGUI.EMPTY_STRING);
        this.jLabelCharge.setText(BinaryCompound.LABEL_CHARGE);
        this.jLabelMolecularFormulaA.setText(BinaryCompound.LABEL_ELEMENT_1);
        this.jLabelMolecularFormulaB.setText(BinaryCompound.LABEL_ELEMENT_2);
        this.jLabelMolecularFormulaSubscriptA.setText(BinaryCompound.LABEL_SUBSCRIPT_1);
        this.jLabelMolecularFormulaSubscriptB.setText(BinaryCompound.LABEL_SUBSCRIPT_2);
        this.jLabelStpState.setText(Chemical.LABEL_STP_STATE + DatabaseGUI.ASSIGNMENT_PUNCTUATION);
        this.jLabelStpDensity.setText(Chemical.LABEL_STP_DENSITY + Chemical.LABEL_DENSITY_UNIT + DatabaseGUI.ASSIGNMENT_PUNCTUATION);
        this.jLabelMolarMass.setText(Chemical.LABEL_MOLAR_MASS + Chemical.LABEL_MOLAR_MASS_UNIT + DatabaseGUI.ASSIGNMENT_PUNCTUATION);
        this.jLabelBP.setText(Chemical.LABEL_BP + Chemical.LABEL_STATE_CHANGE_UNIT + DatabaseGUI.ASSIGNMENT_PUNCTUATION);
        this.jLabelMP.setText(Chemical.LABEL_MP + Chemical.LABEL_STATE_CHANGE_UNIT + DatabaseGUI.ASSIGNMENT_PUNCTUATION);
        this.jLabelColour.setText(Chemical.LABEL_COLOUR + DatabaseGUI.ASSIGNMENT_PUNCTUATION);
        this.jLabelColourExtra.setText(DatabaseGUI.EMPTY_STRING);
    }

    private void createList(){
        this.compounds = this.databaseGUI.listBinaryCompounds();
        this.names = new String[this.compounds.size()];
        
        for(int i = 0; i < names.length; i++){
            this.names[i] = this.compounds.get(i).getCommonName();
        }
    }
    
    private String[] stringInHalf(String originalName) {
        String[] fullName = originalName.split(DatabaseGUI.SPACE);
        String name1 = DatabaseGUI.EMPTY_STRING;
        String name2 = DatabaseGUI.EMPTY_STRING;
        
        int charsUsed = 0;
        for (int i = 0 ; i < fullName.length ; i++) {
            
            if (charsUsed > DatabaseGUI.MAXIMUM_STRING_LENGTH / 2)
                name2 += fullName[i] + DatabaseGUI.SPACE;
            else
                if (fullName[i].length() > DatabaseGUI.MAXIMUM_STRING_LENGTH / 2) {
                    name1 += fullName[i].substring(DatabaseGUI.BEGINNING_INDEX, (DatabaseGUI.MAXIMUM_STRING_LENGTH / 2) - charsUsed) + DatabaseGUI.WORD_SPLIT;
                    name2 += fullName[i].substring((DatabaseGUI.MAXIMUM_STRING_LENGTH / 2) - charsUsed) + DatabaseGUI.SPACE;
                } else
                    name1 += fullName[i] + DatabaseGUI.SPACE;
            charsUsed += fullName[i].length();
        }
        
        return new String[] {name1, name2};
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jListBinaryCompounds = new javax.swing.JList<>();
        jLabelTitle = new javax.swing.JLabel();
        jLabelCommonName = new javax.swing.JLabel();
        jLabelMolarMass = new javax.swing.JLabel();
        jLabelStpState = new javax.swing.JLabel();
        jLabelStpDensity = new javax.swing.JLabel();
        jLabelBP = new javax.swing.JLabel();
        jLabelMP = new javax.swing.JLabel();
        jLabelColour = new javax.swing.JLabel();
        jButtonBack = new javax.swing.JButton();
        jTextFieldSearch = new javax.swing.JTextField();
        jButtonSearch = new javax.swing.JButton();
        jLabelCommonNameExtra = new javax.swing.JLabel();
        jLabelColourExtra = new javax.swing.JLabel();
        jLabelCharge = new javax.swing.JLabel();
        jLabelMolecularFormulaSubscriptB = new javax.swing.JLabel();
        jLabelMolecularFormulaA = new javax.swing.JLabel();
        jLabelMolecularFormulaB = new javax.swing.JLabel();
        jLabelMolecularFormulaSubscriptA = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jListBinaryCompounds.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jListBinaryCompounds.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = names;
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jListBinaryCompounds.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jListBinaryCompoundsMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jListBinaryCompounds);

        jLabelTitle.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabelTitle.setText("List Compounds");

        jLabelCommonName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelCommonName.setText("Name:");

        jLabelMolarMass.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelMolarMass.setText("Molar Mass (g/mol):");

        jLabelStpState.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelStpState.setText("State @ STP:");

        jLabelStpDensity.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelStpDensity.setText("Density @ STP (g/L):");

        jLabelBP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelBP.setText("Boiling Point (C):");

        jLabelMP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelMP.setText("Melting Point (C):");

        jLabelColour.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelColour.setText("Colour:");

        jButtonBack.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButtonBack.setText("Back");
        jButtonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBackActionPerformed(evt);
            }
        });

        jTextFieldSearch.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextFieldSearch.setText("Compound Name");

        jButtonSearch.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonSearch.setText("Search");
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });

        jLabelCommonNameExtra.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelCommonNameExtra.setText("[]");

        jLabelColourExtra.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelColourExtra.setText("[]");

        jLabelCharge.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelCharge.setText("Charge");

        jLabelMolecularFormulaSubscriptB.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabelMolecularFormulaSubscriptB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelMolecularFormulaSubscriptB.setText("b");

        jLabelMolecularFormulaA.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabelMolecularFormulaA.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelMolecularFormulaA.setText("A");

        jLabelMolecularFormulaB.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabelMolecularFormulaB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelMolecularFormulaB.setText("B");

        jLabelMolecularFormulaSubscriptA.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabelMolecularFormulaSubscriptA.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelMolecularFormulaSubscriptA.setText("a");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jLabelTitle)
                .addGap(32, 32, 32)
                .addComponent(jButtonSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonBack)
                .addGap(30, 30, 30))
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelMolarMass)
                            .addComponent(jLabelStpState)
                            .addComponent(jLabelStpDensity)
                            .addComponent(jLabelBP)
                            .addComponent(jLabelMP)
                            .addComponent(jLabelColour)
                            .addComponent(jLabelCommonName)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(jLabelCommonNameExtra))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelMolecularFormulaA)
                                .addGap(4, 4, 4)
                                .addComponent(jLabelMolecularFormulaSubscriptA)
                                .addGap(3, 3, 3)
                                .addComponent(jLabelMolecularFormulaB)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelMolecularFormulaSubscriptB)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelCharge))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jLabelColourExtra)))
                .addContainerGap(218, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelTitle)
                            .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonSearch)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jButtonBack)))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabelMolecularFormulaA)
                                        .addComponent(jLabelMolecularFormulaB))
                                    .addGap(4, 4, 4))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabelMolecularFormulaSubscriptB)
                                        .addComponent(jLabelMolecularFormulaSubscriptA))))
                            .addComponent(jLabelCharge))
                        .addGap(18, 18, 18)
                        .addComponent(jLabelCommonName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelCommonNameExtra)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelMolarMass)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelStpState)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelStpDensity)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelBP)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelMP)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelColour)
                        .addGap(3, 3, 3)
                        .addComponent(jLabelColourExtra)))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Back button
    private void jButtonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBackActionPerformed
        this.databaseGUI.startHomePage();
        this.setVisible(false);
    }//GEN-LAST:event_jButtonBackActionPerformed

    //runs when user selects compound from list
    private void jListBinaryCompoundsMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListBinaryCompoundsMousePressed
        //get compound index
        int index = this.jListBinaryCompounds.getSelectedIndex();
        
        //display compound information
        if(index != -1){
            BinaryCompound binaryCompoundSearchedFor = this.compounds.get(index);
            
            if (binaryCompoundSearchedFor.getCommonName().length() > DatabaseGUI.MAXIMUM_STRING_LENGTH / 2) {
                String[] splitName = this.stringInHalf(binaryCompoundSearchedFor.getCommonName());
                this.jLabelCommonName.setText(Chemical.LABEL_NAME + DatabaseGUI.ASSIGNMENT_PUNCTUATION + splitName[0]);
                this.jLabelCommonNameExtra.setText(splitName[1]);
            } else {
                this.jLabelCommonName.setText(Chemical.LABEL_NAME + DatabaseGUI.ASSIGNMENT_PUNCTUATION + binaryCompoundSearchedFor.getCommonName());
                this.jLabelCommonNameExtra.setText(DatabaseGUI.EMPTY_STRING);
            }
            
            this.jLabelMolarMass.setText(Chemical.LABEL_MOLAR_MASS + Chemical.LABEL_MOLAR_MASS_UNIT + DatabaseGUI.ASSIGNMENT_PUNCTUATION + binaryCompoundSearchedFor.getMolarMass());
            
            if (binaryCompoundSearchedFor.getComponent1().getElement() == binaryCompoundSearchedFor.getComponent2().getElement()) {
                this.jLabelMolecularFormulaA.setText(DatabaseGUI.EMPTY_STRING);
                this.jLabelMolecularFormulaSubscriptA.setText(DatabaseGUI.EMPTY_STRING);
                
                this.jLabelMolecularFormulaB.setText(binaryCompoundSearchedFor.getComponent2().getElement().getAtomicSymbol());
                this.jLabelMolecularFormulaSubscriptB.setText(DatabaseGUI.EMPTY_STRING + (binaryCompoundSearchedFor.getComponent1().getNumOccurrence() + binaryCompoundSearchedFor.getComponent2().getNumOccurrence()));
            } else {
                this.jLabelMolecularFormulaA.setText(binaryCompoundSearchedFor.getComponent1().getElement().getAtomicSymbol());
                this.jLabelMolecularFormulaB.setText(binaryCompoundSearchedFor.getComponent2().getElement().getAtomicSymbol());
                if (binaryCompoundSearchedFor.getComponent1().getNumOccurrence() > 1)
                    this.jLabelMolecularFormulaSubscriptA.setText(DatabaseGUI.EMPTY_STRING + binaryCompoundSearchedFor.getComponent1().getNumOccurrence());
                else
                    this.jLabelMolecularFormulaSubscriptA.setText(DatabaseGUI.EMPTY_STRING);
                if (binaryCompoundSearchedFor.getComponent2().getNumOccurrence() > 1)
                    this.jLabelMolecularFormulaSubscriptB.setText(DatabaseGUI.EMPTY_STRING + binaryCompoundSearchedFor.getComponent2().getNumOccurrence());
                else
                    this.jLabelMolecularFormulaSubscriptB.setText(DatabaseGUI.EMPTY_STRING);
            }
            
            if (binaryCompoundSearchedFor.getCharge() != 0) {
                if (binaryCompoundSearchedFor.getCharge() > 0)
                    this.jLabelCharge.setText(DatabaseGUI.POSITIVE_CHARGE + binaryCompoundSearchedFor.getCharge());
                else
                    this.jLabelCharge.setText(DatabaseGUI.EMPTY_STRING + binaryCompoundSearchedFor.getCharge());
            } else {
                this.jLabelCharge.setText(DatabaseGUI.EMPTY_STRING);
            }
            
            
            if (binaryCompoundSearchedFor.getColour().length() > DatabaseGUI.MAXIMUM_STRING_LENGTH / 2) {
                String[] splitName = this.stringInHalf(binaryCompoundSearchedFor.getColour());
                this.jLabelColour.setText(Chemical.LABEL_COLOUR + DatabaseGUI.ASSIGNMENT_PUNCTUATION + splitName[0]);
                this.jLabelColourExtra.setText(splitName[1]);
            } else {
                this.jLabelColour.setText(Chemical.LABEL_COLOUR + DatabaseGUI.ASSIGNMENT_PUNCTUATION + binaryCompoundSearchedFor.getColour());
                this.jLabelColourExtra.setText(DatabaseGUI.EMPTY_STRING);
            }
            
            if (binaryCompoundSearchedFor.getStpState() == Chemical.DEFAULT_STATE)
                this.jLabelStpState.setText(Chemical.LABEL_STP_STATE + DatabaseGUI.ASSIGNMENT_PUNCTUATION + DatabaseGUI.DEFAULT_STRING);
            else
                this.jLabelStpState.setText(Chemical.LABEL_STP_STATE + DatabaseGUI.ASSIGNMENT_PUNCTUATION + binaryCompoundSearchedFor.getStpState());
            
            if (binaryCompoundSearchedFor.getStpDensity() == Chemical.DEFAULT_DENSITY)
                this.jLabelStpDensity.setText(Chemical.LABEL_STP_DENSITY + Chemical.LABEL_DENSITY_UNIT + DatabaseGUI.ASSIGNMENT_PUNCTUATION + DatabaseGUI.DEFAULT_STRING);
            else
                this.jLabelStpDensity.setText(Chemical.LABEL_STP_DENSITY + Chemical.LABEL_DENSITY_UNIT + DatabaseGUI.ASSIGNMENT_PUNCTUATION + binaryCompoundSearchedFor.getStpDensity());
            
            if (binaryCompoundSearchedFor.getMP() == Chemical.DEFAULT_STATE_CHANGE_TEMP)
                this.jLabelMP.setText(Chemical.LABEL_MP + Chemical.LABEL_STATE_CHANGE_UNIT + DatabaseGUI.ASSIGNMENT_PUNCTUATION + DatabaseGUI.DEFAULT_STRING);
            else
                this.jLabelMP.setText(Chemical.LABEL_MP + Chemical.LABEL_STATE_CHANGE_UNIT + DatabaseGUI.ASSIGNMENT_PUNCTUATION + binaryCompoundSearchedFor.getMP());
            
            if (binaryCompoundSearchedFor.getBP() == Chemical.DEFAULT_STATE_CHANGE_TEMP)
                this.jLabelBP.setText(Chemical.LABEL_BP + Chemical.LABEL_STATE_CHANGE_UNIT + DatabaseGUI.ASSIGNMENT_PUNCTUATION + DatabaseGUI.DEFAULT_STRING);
            else
                this.jLabelBP.setText(Chemical.LABEL_BP + Chemical.LABEL_STATE_CHANGE_UNIT + DatabaseGUI.ASSIGNMENT_PUNCTUATION + binaryCompoundSearchedFor.getBP());
        }
    }//GEN-LAST:event_jListBinaryCompoundsMousePressed

    //Search button
    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
        String name = this.jTextFieldSearch.getText();
        Chemical chemicalSearchedFor = this.databaseGUI.searchChemicalsByName(name);
        
        if(chemicalSearchedFor instanceof BinaryCompound){
            jListBinaryCompounds.setSelectedIndex(this.compounds.indexOf(chemicalSearchedFor));
            BinaryCompound binaryCompoundSearchedFor = (BinaryCompound)chemicalSearchedFor;
            
            if (binaryCompoundSearchedFor.getCommonName().length() > DatabaseGUI.MAXIMUM_STRING_LENGTH / 2) {
                String[] splitName = this.stringInHalf(binaryCompoundSearchedFor.getCommonName());
                this.jLabelCommonName.setText(Chemical.LABEL_NAME + DatabaseGUI.ASSIGNMENT_PUNCTUATION + splitName[0]);
                this.jLabelCommonNameExtra.setText(splitName[1]);
            } else {
                this.jLabelCommonName.setText(Chemical.LABEL_NAME + DatabaseGUI.ASSIGNMENT_PUNCTUATION + binaryCompoundSearchedFor.getCommonName());
                this.jLabelCommonNameExtra.setText(DatabaseGUI.EMPTY_STRING);
            }
            this.jLabelMolarMass.setText(Chemical.LABEL_MOLAR_MASS + Chemical.LABEL_MOLAR_MASS_UNIT + DatabaseGUI.ASSIGNMENT_PUNCTUATION + binaryCompoundSearchedFor.getMolarMass());
            
            if (binaryCompoundSearchedFor.getComponent1().getElement() == binaryCompoundSearchedFor.getComponent2().getElement()) {
                this.jLabelMolecularFormulaA.setText(DatabaseGUI.EMPTY_STRING);
                this.jLabelMolecularFormulaSubscriptA.setText(DatabaseGUI.EMPTY_STRING);
                
                this.jLabelMolecularFormulaB.setText(binaryCompoundSearchedFor.getComponent2().getElement().getAtomicSymbol());
                this.jLabelMolecularFormulaSubscriptB.setText(DatabaseGUI.EMPTY_STRING + binaryCompoundSearchedFor.getComponent2().getNumOccurrence());
            } else {
                this.jLabelMolecularFormulaA.setText(binaryCompoundSearchedFor.getComponent1().getElement().getAtomicSymbol());
                this.jLabelMolecularFormulaB.setText(binaryCompoundSearchedFor.getComponent2().getElement().getAtomicSymbol());
                if (binaryCompoundSearchedFor.getComponent1().getNumOccurrence() > 1)
                    this.jLabelMolecularFormulaSubscriptA.setText(DatabaseGUI.EMPTY_STRING + binaryCompoundSearchedFor.getComponent1().getNumOccurrence());
                else
                    this.jLabelMolecularFormulaSubscriptA.setText(DatabaseGUI.EMPTY_STRING);
                if (binaryCompoundSearchedFor.getComponent2().getNumOccurrence() > 1)
                    this.jLabelMolecularFormulaSubscriptB.setText(DatabaseGUI.EMPTY_STRING + binaryCompoundSearchedFor.getComponent2().getNumOccurrence());
                else
                    this.jLabelMolecularFormulaSubscriptB.setText(DatabaseGUI.EMPTY_STRING);
            }
            
            if (binaryCompoundSearchedFor.getCharge() != 0) {
                if (binaryCompoundSearchedFor.getCharge() > 0)
                    this.jLabelCharge.setText(DatabaseGUI.POSITIVE_CHARGE + binaryCompoundSearchedFor.getCharge());
                else
                    this.jLabelCharge.setText(DatabaseGUI.EMPTY_STRING + binaryCompoundSearchedFor.getCharge());
            } else {
                this.jLabelCharge.setText(DatabaseGUI.EMPTY_STRING);
            }
            if (binaryCompoundSearchedFor.getColour().length() > DatabaseGUI.MAXIMUM_STRING_LENGTH / 2) {
                String[] splitName = this.stringInHalf(binaryCompoundSearchedFor.getColour());
                this.jLabelColour.setText(Chemical.LABEL_COLOUR + DatabaseGUI.ASSIGNMENT_PUNCTUATION + splitName[0]);
                this.jLabelColourExtra.setText(splitName[1]);
            } else {
                this.jLabelColour.setText(Chemical.LABEL_COLOUR + DatabaseGUI.ASSIGNMENT_PUNCTUATION + binaryCompoundSearchedFor.getColour());
                this.jLabelColourExtra.setText(DatabaseGUI.EMPTY_STRING);
            }
            
            
            
            if (binaryCompoundSearchedFor.getStpState() == Chemical.DEFAULT_STATE)
                this.jLabelStpState.setText(Chemical.LABEL_STP_STATE + DatabaseGUI.ASSIGNMENT_PUNCTUATION + DatabaseGUI.DEFAULT_STRING);
            else
                this.jLabelStpState.setText(Chemical.LABEL_STP_STATE + DatabaseGUI.ASSIGNMENT_PUNCTUATION + binaryCompoundSearchedFor.getStpState());
            
            if (binaryCompoundSearchedFor.getStpDensity() == Chemical.DEFAULT_DENSITY)
                this.jLabelStpDensity.setText(Chemical.LABEL_STP_DENSITY + Chemical.LABEL_DENSITY_UNIT + DatabaseGUI.ASSIGNMENT_PUNCTUATION + DatabaseGUI.DEFAULT_STRING);
            else
                this.jLabelStpDensity.setText(Chemical.LABEL_STP_DENSITY + Chemical.LABEL_DENSITY_UNIT + DatabaseGUI.ASSIGNMENT_PUNCTUATION + binaryCompoundSearchedFor.getStpDensity());
            
            if (binaryCompoundSearchedFor.getMP() == Chemical.DEFAULT_STATE_CHANGE_TEMP)
                this.jLabelMP.setText(Chemical.LABEL_MP + Chemical.LABEL_STATE_CHANGE_UNIT + DatabaseGUI.ASSIGNMENT_PUNCTUATION + DatabaseGUI.DEFAULT_STRING);
            else
                this.jLabelMP.setText(Chemical.LABEL_MP + Chemical.LABEL_STATE_CHANGE_UNIT + DatabaseGUI.ASSIGNMENT_PUNCTUATION + binaryCompoundSearchedFor.getMP());
            
            if (binaryCompoundSearchedFor.getBP() == Chemical.DEFAULT_STATE_CHANGE_TEMP)
                this.jLabelBP.setText(Chemical.LABEL_BP + Chemical.LABEL_STATE_CHANGE_UNIT + DatabaseGUI.ASSIGNMENT_PUNCTUATION + DatabaseGUI.DEFAULT_STRING);
            else
                this.jLabelBP.setText(Chemical.LABEL_BP + Chemical.LABEL_STATE_CHANGE_UNIT + DatabaseGUI.ASSIGNMENT_PUNCTUATION + binaryCompoundSearchedFor.getBP());
        }else
            JOptionPane.showMessageDialog(null, name + DatabaseGUI.WARNING_NOT_FOUND);
    }//GEN-LAST:event_jButtonSearchActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBack;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JLabel jLabelBP;
    private javax.swing.JLabel jLabelCharge;
    private javax.swing.JLabel jLabelColour;
    private javax.swing.JLabel jLabelColourExtra;
    private javax.swing.JLabel jLabelCommonName;
    private javax.swing.JLabel jLabelCommonNameExtra;
    private javax.swing.JLabel jLabelMP;
    private javax.swing.JLabel jLabelMolarMass;
    private javax.swing.JLabel jLabelMolecularFormulaA;
    private javax.swing.JLabel jLabelMolecularFormulaB;
    private javax.swing.JLabel jLabelMolecularFormulaSubscriptA;
    private javax.swing.JLabel jLabelMolecularFormulaSubscriptB;
    private javax.swing.JLabel jLabelStpDensity;
    private javax.swing.JLabel jLabelStpState;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JList<String> jListBinaryCompounds;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldSearch;
    // End of variables declaration//GEN-END:variables
}